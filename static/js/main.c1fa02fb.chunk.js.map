{"version":3,"sources":["SearchForm.js","SearchResults.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["API_Key","process","url","SearchForm","useState","input","setInput","imagesResult","setImagesResult","amountResult","setAmountResult","inputFromButton","setInputFromButton","searchPhotos","e","a","preventDefault","console","log","useEffect","axios","get","request","data","hits","fetchData","Container","fluid","Form","onSubmit","Group","Label","Control","className","placeholder","value","onChange","evt","target","type","controlId","as","Button","onClick","map","img","href","largeImageURL","width","height","src","webformatURL","alt","tags","SearchResults","NavBar","Jumbotron","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAKMA,EAAO,UAAMC,sCACbC,EAAM,0BA6PGC,MA3Pf,WAAsB,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEuBF,mBAAS,IAFhC,mBAEVG,EAFU,KAEIC,EAFJ,OAGuBJ,mBAAS,IAHhC,mBAGVK,EAHU,KAGIC,EAHJ,OAI6BN,mBAAS,IAJtC,mBAIVO,EAJU,KAIOC,EAJP,OAKaR,oBAAS,GALtB,mBAgCXS,GAhCW,UAgCC,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACjBD,EAAEE,iBACFC,QAAQC,IAAI,uBAFK,2CAAH,uDA8GlB,OA9FAC,qBAAU,WAAK,4CACX,4BAAAJ,EAAA,sEAC0BK,IAAMC,IAAN,UAAanB,EAAb,iBAAyBF,EAAzB,cAAsCW,EAAtC,qCAAkFF,IAD5G,cACUa,EADV,OAMId,EAAgBc,EAAQC,KAAKC,MANjC,kBAQWF,GARX,4CADW,uBAAC,WAAD,wBAWXG,KACD,CAACd,IAmFA,8BAEE,eAACe,EAAA,EAAD,CAAWC,OAAO,EAAlB,UAGM,cAACC,EAAA,EAAD,CAAMC,SAAUhB,EAAhB,SAEA,eAACe,EAAA,EAAKE,MAAN,WACA,cAACF,EAAA,EAAKG,MAAN,0BACI,cAACH,EAAA,EAAKI,QAAN,CACCC,UAAU,UACVC,YAAY,oBACZC,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAS/B,EAAS+B,EAAIC,OAAOH,QACvCI,KAAK,cAoBd,eAACX,EAAA,EAAD,CAAMQ,SAhHS,SAACtB,GACpBG,QAAQC,IAAIJ,EAAEwB,OAAOH,OACrBzB,EAAgBI,EAAEwB,OAAOH,QA8GWA,MAAO1B,EAAvC,UACI,cAACmB,EAAA,EAAKE,MAAN,CAAYU,UAAU,aAAtB,SAEQ,eAACZ,EAAA,EAAKI,QAAN,CAAcS,GAAG,SAAjB,UACI,8DACA,uCACA,wCACA,wCACA,wCACA,6CAGZ,cAACC,EAAA,EAAD,CAAQC,QAjKA,WAChB/B,EAAmBP,GACnBY,QAAQC,IAAIb,IA+JJ,uBAiDN,uBACGE,EAAaqC,KAAI,SAAAC,GACd,OACI,mBAAGC,KAAMD,EAAIE,cAAeT,OAAO,SAAnC,SACA,qBAAKL,UAAU,QAAQe,MAAM,MAAMC,OAAO,MAAMC,IAAKL,EAAIM,aAAcC,IAAKP,EAAIQ,kB,MCnOrFC,I,QCXAC,MARf,WACI,OACQ,8BAEA,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,mD,MCUtBC,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c1fa02fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport axios from 'axios'; \r\n// import './SearchForm.css'; \r\nimport { Button, Form, FormControl, Container, Row, Col } from 'react-bootstrap'; \r\n\r\nconst API_Key = `${process.env.REACT_APP_API_KEY}`\r\nconst url = \"https://pixabay.com/api\"\r\n\r\nfunction SearchForm(){\r\n    const [input, setInput] = useState(''); \r\n    const [imagesResult, setImagesResult] = useState([]); \r\n    const [amountResult, setAmountResult] = useState(''); \r\n    const [inputFromButton, setInputFromButton] = useState(''); \r\n    const [loading, setLoading] = useState(true); \r\n    // console.log(input);\r\n\r\n//     const handleClick = () => {\r\n//         console.log(input)\r\n//         setInputFromButton(input)\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         fetchData(input); \r\n//     }, [input]); \r\n\r\n//     async function fetchData(input){\r\n//         try {\r\n//        let data = await fetch(`https://pixabay.com/api/?key=${API_Key}&q=${input}`); \r\n//        const items = await data.json(); \r\n//        console.log(items)\r\n//        setImagesResult(items.results); \r\n//     }   catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// }\r\n    \r\n    const handleClick = () => {\r\n        setInputFromButton(input)\r\n        console.log(input)\r\n    }\r\n    const searchPhotos = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Submitting the Form\")\r\n        \r\n      };\r\n    //   const searchPhotos = async (e) => {\r\n    //     const response = await axios.get(`https://pixabay.com/api/?key=${API_Key}&q=flowers`, {\r\n    //         // params: {key: 19658239-f347a00b7f11bf55a7d8e89ae, \r\n    //         safesearch: true }, \r\n    //     )\r\n    //     setImagesResult(response.data.hits)\r\n    //     e.preventDefault();\r\n    //     console.log(\"Submitting the Form\")\r\n        \r\n    //   };\r\n\r\n    useEffect(() =>{\r\n        async function fetchData() {\r\n            const request = await axios.get(`${url}/?key=${API_Key}&q=${inputFromButton}&safesearch=true&per_page=${amountResult}`); \r\n            // console.log(request.data.hits)\r\n            // let url1 = window.URL.createObjectURL(request.data.hits); \r\n            // a.href = url1; \r\n            // a.download = 'images.json'\r\n            setImagesResult(request.data.hits); \r\n            // a.click(); \r\n            return request; \r\n        }\r\n        fetchData(); \r\n    }, [inputFromButton])\r\n\r\n    // console.log(imagesResult)\r\n\r\n    //use this one\r\n    const onAmountChange = (e) => {\r\n        console.log(e.target.value)\r\n        setAmountResult(e.target.value)\r\n    }\r\n    //  const onAmountChange = (e) => {\r\n    //     console.log(e)\r\n    //     setAmountResult(e)\r\n    // }\r\n\r\n\r\n    // USE THIS ONE\r\n    // useEffect(function(){\r\n\t// \t// const result = axios.get(`https://pixabay.com/api/?key=${API_Key}&q=${inputFromButton}`)\r\n\t// \t\taxios.get(`${url}/?key=${API_Key}&q=${inputFromButton}`)\r\n\t// \t\t.then(res => {\r\n    //     console.log(res)\r\n    //     // result(res.data.hits)\r\n    //     setImagesResult(res.data.hits)\r\n    //     // setImagesResult(result => [...result, res.data.hits])\r\n\t// \t\t})\r\n\t// \t\t.catch(err => {\r\n\t// \t\t\tconsole.log(err)\r\n\t// \t\t})\r\n    // }, [inputFromButton])\r\n\r\n    // useEffect(() => {\r\n\t// \tconst result = axios\r\n\t// \t\t.get(`https://pixabay.com/api/?key=${API_Key}&q=${input}`)\r\n\t// \t\t.then(res => {\r\n    //     console.log(res)\r\n    //     result(res.data.hits)\r\n\t// \t\t})\r\n\t// \t\t.catch(err => {\r\n\t// \t\t\tconsole.log(err)\r\n\t// \t\t})\r\n    // }, [searchPhotos])\r\n    \r\n// const API = axios.create({\r\n//     baseURL = 'https://pixabay.com/api', \r\n//     headers: {\r\n//         Accept: 'application/json', \r\n//         'Content-type': 'application/json', \r\n//     }, \r\n//     params: {\r\n//         key: 19658239-f347a00b7f11bf55a7d8e89ae,\r\n//         safesearch: true,  \r\n\r\n//     }, \r\n// }); \r\n    \r\n    // useEffect(function () => {\r\n    //     async function deckUser() {\r\n    //     const response = await fetch(`${url}/key=${API_Key}&q=${input}&image_type=photo&per_page=${amountResult}&safesearch=true`); \r\n    //     const data = await response.json(); \r\n    //     const [item] = data.results;\r\n    //     console.log(item) \r\n    //     setImagesResult(item); \r\n    //     setLoading(false); \r\n    // }\r\n    // }, []); \r\n\r\n    // async function showResult() {\r\n    // const result = await axios.get(url); \r\n    // console.log(result.data)\r\n    // }\r\n\r\n    // const onChange = evt => {\r\n    //     setInput(evt.target.value); \r\n    //     console.log(evt.target.value)\r\n    //}\r\n\r\n    // Input(evt) {\r\n    //     setInput({\r\n    //         input: evt.target.value\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n          {/* <h1>Image Search</h1> */}\r\n          <Container fluid={true}>\r\n            {/* <Row> */}\r\n                {/* <Col> */}\r\n                <Form onSubmit={searchPhotos}>\r\n                {/* <label htmlFor=\"searchTerm\">Search Term</label> */}\r\n                <Form.Group>\r\n                <Form.Label>Search Term</Form.Label>\r\n                    <Form.Control\r\n                     className=\"keyWord\"\r\n                     placeholder=\"Enter key word(s)\"\r\n                     value={input}\r\n                     onChange={(evt) => setInput(evt.target.value)}\r\n                     type=\"text\"\r\n                     />\r\n                       \r\n                  \r\n                    {/* <input \r\n                        className=\"u-full-width\"\r\n                        type=\"text\" \r\n                        id=\"searchTerm\" \r\n                        name=\"searchTerm\"\r\n                        placeholder=\"Enter key word(s)\"\r\n                        value={input}\r\n                        onChange={(evt) => setInput(evt.target.value)}/> */}\r\n                        {/* onChange={searchPhotos}/> */}\r\n                        {/* <button onClick={handleClick}>Submit</button> */}\r\n                </Form.Group>\r\n                </Form>\r\n                {/* </Col> */}\r\n           \r\n  \r\n            {/* <Col> */}\r\n            <Form onChange={onAmountChange} value={amountResult}>\r\n                <Form.Group controlId=\"formAmount\">\r\n                    {/* <Form.Label>Select Number of Results</Form.Label> */}\r\n                        <Form.Control as=\"select\">\r\n                            <option>Select Number of Results</option>\r\n                            <option>5</option>\r\n                            <option>10</option>\r\n                            <option>15</option>\r\n                            <option>20</option>\r\n                            <option>25</option>\r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Button onClick={handleClick}>Search</Button>\r\n\r\n            </Form>\r\n            {/* </Col> */}\r\n               \r\n            {/* </Row> */}\r\n            {/* <Button class=\"col-md-12 text-center\" onClick={handleClick}>Submit</Button> */}\r\n\r\n            {/* <select onChange={onAmountChange} value={amountResult}>\r\n                <option value=\"Select Number of Results\">Select Number of Results</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"15\">15</option>\r\n            </select> */}\r\n            \r\n            {/* <br></br> */}\r\n            {/* <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                 Dropdown Button\r\n                </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu onChange={onAmountChange} value={amountResult}>\r\n                <Dropdown.Item href=\"#/action-1\">Select Number of Results</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">5</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-1\">10</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-1\">15</Dropdown.Item>\r\n                <Dropdown.Item= href=\"#/action-1\"</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n            </Dropdown> */}\r\n\r\n\r\n            {/* <DropdownButton\r\n      alignRight\r\n      title=\"Dropdown right\"\r\n      id=\"dropdown-menu-align-right\"\r\n      onSelect={onAmountChange} \r\n        >\r\n              <Dropdown.Item eventKey=\"option-1\">option-1</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"option-2\">option-2</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"option-3\">option 3</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item eventKey=\"some link\">some link</Dropdown.Item>\r\n      </DropdownButton> */}\r\n\r\n\r\n\r\n            {/* <Button onClick={handleClick}>Submit</Button> */}\r\n         \r\n            \r\n          < br></br>\r\n            {imagesResult.map(img => {\r\n                return (\r\n                    <a href={img.largeImageURL} target=\"_blank\">\r\n                    <img className=\"image\" width=\"200\" height=\"200\" src={img.webformatURL} alt={img.tags}/>\r\n                    </a>\r\n                )\r\n            })}\r\n            </Container>\r\n        </div>\r\n      );\r\n    }\r\n\r\nexport default SearchForm; \r\n\r\n","import React, { useState } from 'react'; \r\n\r\n// const SearchResults = (props) => {\r\n//     const { tags, webformatURL } = props;\r\n//     return (\r\n//       <div className=\"row\">\r\n//         <div className=\"col-md-12 px-0\">\r\n//           <div className=\"rounded-lg overflow-hidden\">\r\n//             <img src={webformatURL} className=\"img-fluid \" alt={tags}></img>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   };\r\nfunction SearchResults(){\r\n    // const [results, setResults] = useState([]); \r\n\r\n    return (\r\n        <div>\r\n            <h1>Results</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchResults;","import React from 'react';\r\nimport './NavBar.css'; \r\nimport {Jumbotron} from 'react-bootstrap'; \r\n\r\nfunction NavBar() {\r\n    return (\r\n            <div>\r\n            {/* <h1 class=\"title\">Image Search</h1> */}\r\n            <Jumbotron class=\"title\"><h1>Image Search</h1></Jumbotron>\r\n            </div>\r\n    )\r\n}\r\nexport default NavBar; ","import React from 'react'; \nimport SearchForm from './SearchForm'; \nimport SearchResults from './SearchResults'\nimport NavBar from \"./NavBar\"; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <SearchForm />\n      {/* <SearchResults /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}